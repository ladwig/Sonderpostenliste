{"version":3,"file":"4.2bb105848a305acf4d03.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import { Component } from 'react'\nimport Link from 'next/link'\nimport firebase from '../components/firebase'\n\nclass Index extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { products: [] }\n  }\n\n  componentWillMount(){\n  /* Create reference to messages in Firebase Database */\n  let productsRef = firebase.database().ref('products').orderByKey().limitToLast(100);\n  productsRef.on('child_added', snapshot => {\n    /* Update React state when message is added at Firebase Database */\n    let product = { text: snapshot.val(), id: snapshot.key };\n    this.setState({ products: [product].concat(this.state.product) });\n  })\n}\naddProduct(e){\n  e.preventDefault(); // <- prevent form submit from reloading the page\n  /* Send the message to Firebase */\n  firebase.database().ref('product').push( this.inputEl.value );\n  this.inputEl.value = ''; // <- clear the input\n}\n\n  render () {\n    return (\n      <div>\n        <h1>Sonderpostenliste</h1>\n        <Link href=\"/addproduct\">\n          <a>Artikel hinzuf√ºgen</a>\n        </Link>\n\n        <form onSubmit={this.addProduct.bind(this)}>\n       <input type=\"text\" ref={ el => this.inputEl = el }/>\n       <input type=\"submit\"/>\n       <ul>\n         { /* Render the list of messages */\n           this.state.produt.map( product => <li key={product.id}>{product.text}</li> )\n         }\n       </ul>\n     </form>\n      </div>\n    )\n  }\n\n}\n\nexport default Index\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA1CA;AACA;AA6CA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}